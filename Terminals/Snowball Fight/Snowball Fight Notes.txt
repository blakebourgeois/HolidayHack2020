this is in the speaker unpreparedness room

https://www.youtube.com/watch?v=Jo5Nlbqd-Vg

Tangle Coalbox:
This version seems simple enough on the Easy level, but the Impossible level is, well...
I'd call it impossible, but I just saw someone beat it! I'm sure something's off here.
Could it be that the name a player provides has some connection to how the forts are laid out?
Knowing that, I can see how an elf might feed their Hard name into an Easy game to cheat a bit.
But on Impossible, the best you get are rejected player names in the page comments. Can you use those somehow?

Random Facts on Mersenne Twister notes:

same seed leads to same output when using pseudo Random
period: amount

mersenne twiser, most widespread is MT-19937, large period.
MT19937 period is large prime, 2^19937 - 1
mostly statistically valid, quick, easy to implement

if you have ~100 recent values from PRNG you can predict upcoming values
tempers results, but is reversable

we can recreate state array by reversing 624 random values, then run the function ourselves

might need to figure out how the 32bit integer is being converted in to a float, 64bit integer

tom provides toolkit: https://github.com/tliston/mt19937

Stepped through Tom's script to find out how it worked.
The impossible mode page source lists 624 "rejected" seeds for building the board (as per Tangle's hint)
The "name" provides a seed for the board layout, which is why you can take a hard seed and input it on easy/medium to replay the game
By putting all 624 values into the script, rather than letting the script generate the values, we can predict the "redacted" seed
By playing the redacted seed on easy, we can reveal the board layout of a simultaneously played impossible game
If you start a new game on impossible you have to re-run the script against the new values to predict the current seed